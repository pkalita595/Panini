%{

#include <stdio.h>
#include <stdlib.h>
#include "yacc.tab.h" //generated by yacc -d

extern "C" int yylex();

%}


%option noyywrap


%%
(-)?[0-9]+(\.[0-9]+)?([eE][0-9]+)?	{yylval.f = atoi(yytext);  return NUM;}
[-+=()*/\n:;,]                     {return yytext[0];}
(bipush)			{return bipush;}
(istore)			{return istore;}
(istore_0)			{return istore_0;}
(istore_1)			{return istore_1;}
(istore_2)			{return istore_2;}
(istore_3)			{return istore_3;}
(if_icmple)			{return if_icmple;}
(if_icmplt)			{return if_icmplt;}
(if_icmpne)			{return if_icmpne;}	
(if_icmpgt)			{return if_icmpgt;}	
(if_icmpge)			{return if_icmpge;}	
(if_icmpeq)			{return if_icmpeq;}	
(ifeq)				{return ifeq;}	
(ifge)				{return ifge;}	
(ifgt)				{return ifgt;}	
(ifle)				{return ifle;}	
(iflt)				{return iflt;}	
(ifne)				{return ifne;}
(iinc)				{return iinc;}	
(iconst_m1)			{return iconst_m1;}	
(iconst_0)			{return iconst_0;}
(iconst_1)			{return iconst_1;}
(iconst_2)			{return iconst_2;}
(iconst_3)			{return iconst_3;}
(iconst_4)			{return iconst_4;}
(iconst_5)			{return iconst_5;}
(iload)				{return iload;}
(iload_0)			{return iload_0;}
(iload_1)			{return iload_1;}
(iload_2)			{return iload_2;}
(iload_3)			{return iload_3;}
(ineg)				{return ineg;}
(imul)				{return imul;}
(iadd)				{return iadd;}
(isub)				{return isub;}
(idiv)				{return idiv;}
(irem)				{return irem;}
[ \t\v\f]			{;}
%%
